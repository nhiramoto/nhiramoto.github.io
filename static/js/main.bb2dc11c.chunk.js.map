{"version":3,"sources":["components/Introduction/Introduction.js","components/Academic/Academic.js","components/Layout/Layout.js","App.js","serviceWorker.js","index.js"],"names":["Introduction","react_default","a","createElement","className","Component","Academic","Layout","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleNavItemMouseEnter","bind","assertThisInitialized","handleNavItemMouseOut","setState","navBtnWidth","$","css","e","target","clearQueue","animate","width","get","scrollWidth","state","id","href","onMouseEnter","onMouseOut","components_Introduction_Introduction","components_Academic_Academic","App","components_Layout_Layout","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bb2dc11c.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Introduction.sass';\n\nclass Introduction extends Component {\n    render() {\n        return (\n            <div className=\"Introduction\">\n                <div className=\"Introduction-container\">\n                    <div className=\"info\">\n                        <div className=\"name hoverable\"><span className=\"long-name\">Nicolau</span><span className=\"short-name\">N</span> <span className=\"last-name long-name\">Hiramoto</span><span className=\"last-name short-name\">H</span></div>\n                        <div className=\"desc hoverable\">Computer Scientist, Linux enthusiast.</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Introduction;\n\n","import React, { Component } from 'react';\nimport './Academic.sass';\n\nclass Academic extends Component {\n    render() {\n        return (\n            <div className=\"Academic\">\n                <h1>Academic Formation</h1>\n                <ul className=\"historic\">\n                    <li>\n                        <span className=\"years\">2013 - 2018</span>\n                        <span className=\"qualification\">Bachelor of Computer Science</span>\n                        <span className=\"institution\">Faculdade de Ciências e Tecnologia - UNESP</span>\n                        <span className=\"location\">Presidente Prudente - SP, Brazil</span>\n                    </li>\n                    <li>\n                        <span className=\"years\">2010 - 2011</span>\n                        <span className=\"qualification\">Electronics Technician</span>\n                        <span className=\"institution\">ETEC Julio de Mesquita</span>\n                        <span className=\"location\">Santo André - SP, Brazil</span>\n                    </li>\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport default Academic;\n\n","import React, { Component } from 'react';\nimport $ from 'jquery';\nimport './Layout.sass';\nimport Introduction from '../Introduction/Introduction';\nimport Academic from '../Academic/Academic';\n\nclass Layout extends Component {\n\n    constructor() {\n        super();\n        this.handleNavItemMouseEnter = this.handleNavItemMouseEnter.bind(this);\n        this.handleNavItemMouseOut = this.handleNavItemMouseOut.bind(this);\n    }\n\n    componentDidMount() {\n        this.setState({\n            navBtnWidth: $('.navbar a').css('width')\n        });\n    }\n    \n    handleNavItemMouseEnter(e) {\n        $(e.target).clearQueue();\n        $(e.target).animate({\n            width: $(e.target).get(0).scrollWidth\n        }, 300, () => {\n            $(e.target).width('auto');\n        });\n    }\n\n    handleNavItemMouseOut(e) {\n        $(e.target).animate({\n            width: this.state.navBtnWidth\n        }, 300);\n    }\n\n    render() {\n        return (\n            <div id=\"layout-container\">\n                <nav className=\"navbar\">\n                    <ul className=\"bubbles\">\n                        <li><a href=\"#introduction\" onMouseEnter={this.handleNavItemMouseEnter} onMouseOut={this.handleNavItemMouseOut}>Introduction</a></li>\n                        <li><a href=\"#academic\" onMouseEnter={this.handleNavItemMouseEnter} onMouseOut={this.handleNavItemMouseOut}>Academic</a></li>\n                    </ul>\n                </nav>\n                <section id=\"introduction\" className=\"section\">\n                    <Introduction />\n                </section>\n                <section id=\"academic\" className=\"section\">\n                    <Academic />\n                </section>\n            </div>\n        );\n    }\n}\n\nexport default Layout;\n","import React, { Component } from 'react';\nimport './App.sass';\nimport Layout from './components/Layout/Layout';\n\nclass App extends Component {\n    render() {\n        return (\n            <div className=\"App\">\n                <Layout />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}